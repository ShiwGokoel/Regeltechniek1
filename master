#include <Stepper.h>
#include <PID_v1_bc.h>

// Stepper motor pins
#define IN1 11
#define IN2 10
#define IN3 9
#define IN4 8
#define STEPS 32

// Joystick pin
#define JOYSTICK A0

// Constants
const double SETPOINT = 512.0;   // Desired joystick position
const double KP = 0.1;           // Proportional gain
const double KI = 0.01;          // Integral gain
const int MIN_SPEED = 5;         // Minimum motor speed
const int MAX_SPEED = 500;       // Maximum motor speed

// Variables
double input, output;
PID myPID(&input, &output, &SETPOINT, KP, KI, 0, DIRECT); // PID controller

// Create an instance of the Stepper class
Stepper stepper(STEPS, IN4, IN2, IN3, IN1);

void setup() {
  // Set pin modes for motor control pins
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

  // Set up PID
  myPID.SetMode(AUTOMATIC);
  myPID.SetOutputLimits(-MAX_SPEED, MAX_SPEED);  // Adjust the output limits as needed
}

void loop() {
  // Read joystick input
  int val = analogRead(JOYSTICK);
  input = val;

  // Compute PID output
  myPID.Compute();

  // Compute motor speed and direction
  int speed = abs(output) < MIN_SPEED ? 0 : abs(output);
  int direction = output < 0 ? -1 : 1;

  // Set motor speed and direction
  stepper.setSpeed(speed);
  stepper.step(direction);

  // Delay to control loop rate
  delay(50);
}
